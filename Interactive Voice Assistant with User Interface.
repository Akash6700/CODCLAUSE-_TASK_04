import sys
import speech_recognition as sr
import pyttsx3
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QLabel, QTextEdit

class VoiceAssistantApp(QMainWindow):
    def __init__(self):
        super().__init__()

        self.initUI()
        
        self.recognizer = sr.Recognizer()
        self.microphone = sr.Microphone()

        self.engine = pyttsx3.init()

    def initUI(self):
        self.setWindowTitle("Voice Assistant")
        self.setGeometry(100, 100, 400, 300)

        self.lbl_command = QLabel("Command:", self)
        self.lbl_command.move(20, 20)

        self.txt_command = QTextEdit(self)
        self.txt_command.setGeometry(20, 50, 360, 100)

        self.btn_microphone = QPushButton("ðŸŽ¤", self)
        self.btn_microphone.setGeometry(150, 170, 100, 50)
        self.btn_microphone.clicked.connect(self.handle_microphone_click)

    def handle_microphone_click(self):
        with self.microphone as source:
            self.recognizer.adjust_for_ambient_noise(source)
            print("Listening...")
            audio = self.recognizer.listen(source)

        try:
            print("Processing...")
            command = self.recognizer.recognize_google(audio)
            print("Command:", command)
            self.txt_command.setPlainText(command)
            self.respond_to_command(command)
        except sr.UnknownValueError:
            print("Could not understand audio")
        except sr.RequestError as e:
            print("Error fetching results; {0}".format(e))

    def respond_to_command(self, command):
        # Add your logic to interpret and respond to commands here
        response = "I heard you say: " + command
        self.engine.say(response)
        self.engine.runAndWait()
        print("Response:", response)

def main():
    app = QApplication(sys.argv)
    window = VoiceAssistantApp()
    window.show()
    sys.exit(app.exec_())

if __name__ == "__main__":
    main()
